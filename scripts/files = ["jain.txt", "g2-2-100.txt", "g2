files = ["jain.txt", "g2-2-100.txt", "g2-2-20.txt", "pathbased.txt", "Aggregation.txt"]
clusters = [2, 3, 2, 3, 7]

for file in files :
    f_in = open("../src/"+file, "r")
    f_out = open("../src/"+file.replace(".txt", "")+"_out.txt", "w")
    for line in f_in :
        f_out.write(re.sub("\s+", ",", line.strip())+"\n")
    f_in.close()
    f_out.close()

compteur = 0
for file in files :

    print("\n\nAffichage des données du fichier sans traitement")

    data = pd.read_csv("../src/"+file[:-4]+"_out.txt")
    try :
        plt.scatter(data.iloc[:, 0], data.iloc[:, 1], c = data.iloc[:, 2])
    except :
        plt.scatter(data.iloc[:, 0], data.iloc[:, 1])
    plt.title("tracé du fichier "+file+" avec clustering prédéfini si possible")
    plt.xlabel("abscisse inconnu")
    plt.ylabel("ordonnée inconnue")
    plt.show()

    print("\n\nAffichage du clustering avec le modèle de mélange de Gaussiennes")
    X_train = data
    gmm = mixture.GaussianMixture(n_components = clusters[compteur]).fit(X_train)
    labels = gmm.predict(X_train)
    plt.scatter(X_train.iloc[:, 0], X_train.iloc[:, 1], c = labels)
    plt.title("tracé du fichier "+file+" avec clustering")
    plt.xlabel("abscisse inconnu")
    plt.ylabel("ordonnée inconnue")
    plt.show()

    try : 
        rand_value = metrics.adjusted_rand_score(data.iloc[:, 2], labels)
        print("\nPour le fichier "+file+", l'indice de Rand est de : "+str(rand_value))
        print("Le nombre de cluster recherché est de : "+str(clusters[compteur]))
        print("\n################")
    except :
        print("\nIl n'y a pas de classe prédéfinie pour le fichier "+file+", l'indice de rand n'est donc pas calculable\n Le nombre de cluster recherché est de : "+str(clusters[compteur]))
        print("\n################")

    X_train_1 = data
    clustering = cluster.DBSCAN(eps = 2, min_samples = 5).fit(X_train_1)
    labels = clustering.labels_
    plt.scatter(X_train_1.iloc[:, 0], X_train_1.iloc[:, 1], c = labels)
    plt.show()

    compteur += 1